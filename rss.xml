<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title></title>
        <subtitle></subtitle>
        <icon>http://aura-hy.github.io/images/favicon.ico</icon>
        <link>http://Aura-HY.github.io</link>
        <author>
          <name>Aura-hy</name>
        </author>
        <description></description>
        <language>en</language>
        <pubDate>Sun, 02 Mar 2025 15:04:31 +0800</pubDate>
        <lastBuildDate>Sun, 02 Mar 2025 15:04:31 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://aura-hy.github.io/2025/03/02/knowledgeGraph/zeroToOne/zeroToOne/</guid>
            <title>从零开始的知识图谱</title>
            <link>http://aura-hy.github.io/2025/03/02/knowledgeGraph/zeroToOne/zeroToOne/</link>
            <category term="知识图谱" scheme="http://aura-hy.github.io/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/" />
            <category term="从零开始" scheme="http://aura-hy.github.io/categories/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/" />
            <pubDate>Sun, 02 Mar 2025 15:04:31 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;知识图谱&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识图谱&#34;&gt;#&lt;/a&gt; 知识图谱&lt;/h1&gt;
&lt;h2 id=&#34;安装neo4j图数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装neo4j图数据库&#34;&gt;#&lt;/a&gt; 安装 neo4j 图数据库&lt;/h2&gt;
&lt;p&gt;jdk 版本只支持 11，需要到系统环境变量中去改（现在已经改至 11）&lt;/p&gt;
&lt;h3 id=&#34;启动neo4j&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动neo4j&#34;&gt;#&lt;/a&gt; 启动 neo4j&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 neo4j 解压的文件夹的 bin 文件夹下，打开 cmd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 / 卸载服务（cmd 命令）：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 安装
neo4j install-service
# 卸载
neo4j uninstall-service
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.  启动服务：neo4j.bat console。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5. 浏览器打开：[http://localhost:7474/](https://link.zhihu.com/?target=http%3A//localhost%3A7474/)，默认账号和密码均为：neo4j。首次登录会提醒修改密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6. 常见命令：如开始服务、停止服务、重启服务、安装、卸载、更新等。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   Usage: neo4j &amp;#123; console | start | stop | restart | status | install-service | uninstall-service | update-service &amp;#125; &amp;lt; -Verbose &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 知识图谱基础知识&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1. 存储信息在节点和关系中的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2. 每个节点和关系都可以有属性、键值对&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3. 节点可以被赋予标签以帮助将它们分组在一起&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4. 关系始终有类型和方向&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;![image-20241220202343473](https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241220202343473.png)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LangChain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 查询知识图谱&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### Querying the movie knowledge graph&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;取一个Python中的多行字符串，赋值给cypher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```python&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cypher=&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	MATCH(n)  #匹配子句，模式匹配，可以寻找的最小模式匹配是一个单节点模式·将结果赋值给n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	RETURN count(n) As numberOfNodes #返回这些节点的个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;要运行查询本身，就要利用之前设置好的 LangChain 集成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;result = kg.query(cypher)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result   ===&amp;gt;[&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;numberOfNodes&amp;#x27;&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;171&lt;/span&gt;&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cypher=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	MATCH(m:movie)  //寻找一个标签是电影的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	RETURN count(m) As numberOfMovie &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;kg.query(cypher)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cypher=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	MATCH(tom:Person &amp;#123;name:&amp;quot;Tom Hanks&amp;quot;&amp;#125;)  //寻找一个标签是人的，名字属性是&amp;quot;Tom Hanks&amp;quot;的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	RETURN tom&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;kg,query(cypher)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;为rag准备文本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为rag准备文本&#34;&gt;#&lt;/a&gt; 为 RAG 准备文本&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; dotenv &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; load_dotenv&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain_community.graphs &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Neo4jGraph&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Load from enviroment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;load_dotenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../.env.studiomac&amp;#x27;&lt;/span&gt;,override=Ture)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NEO4J_URI = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;NEO4J_URI&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NEO4J_USERNAME = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;NEO4J_USERNAME&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NEO4J_PASSWORD = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;NEO4J_PASSWORD&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NEO4J_DATABASE = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;NEO4J_DATABASE&amp;#x27;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OPENAI_API_KEY = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;OPENAI_API_KEY&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 创建与知识图的连接，以便发送一些查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kg = Neo4jGraph(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	url=NEO4J_URI,username=USERNAME,password=PASSWORD,database=DATABASE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;启用向量搜索的第一步是创建一个向量索引&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241220211902481.png&#34; alt=&#34;image-20241220211902481&#34; /&gt;&lt;/p&gt;
&lt;p&gt;要关注的是 OPTIONS 部分中向量的索引有多大，维度有多大（这里是 OpenAI 嵌入模型的默认大小）&lt;/p&gt;
&lt;p&gt;还有相似函数&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;question = &amp;quot;What movies are about adenture？&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;kg.query(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	WITH ganai.vector.encode(&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		$question,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		&amp;quot;OpenAI&amp;quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		&amp;#123;token:$openAiApiKey&amp;#125;) AS question_embedding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	CALL db.index.vector.queryNodes(&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		&amp;#x27;movie_tagline_embeddings&amp;#x27;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		$top_k,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		quesion_embedding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		) YIELD node AS movie,score&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	RETURN movie.title,movie.tagline,score&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;params=&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;openAiApiKey&amp;quot;&lt;/span&gt;:OPENAI_API_KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&amp;quot;question&amp;quot;&lt;/span&gt;:quesion,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&amp;quot;top_k&amp;quot;&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;WITH&lt;/code&gt;  用于将前一句的结果传递给下一句，并且可以在这个过程中进行计算或过滤。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ganai.vector.encode&lt;/code&gt; : 这是一个自定义的函数调用，可能是通过扩展或插件添加到图数据库中的。它接受三个参数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AS question_embedding&lt;/code&gt; : 将  &lt;code&gt;ganai.vector.encode&lt;/code&gt;  函数返回的结果（即问题的向量表示）赋值给一个新的变量  &lt;code&gt;question_embedding&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;CALL&lt;/code&gt; &lt;/strong&gt;: 调用一个过程或函数&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;&#39;movie_tagline_embeddings&#39;&lt;/code&gt; &lt;/strong&gt;: 指定要查询的向量索引名称，这里是指包含电影标语嵌入的索引。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;question_embedding&lt;/code&gt; &lt;/strong&gt;: 使用之前生成的问题嵌入作为查询条件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;YIELD&lt;/code&gt;  关键字用于从被调用的过程中提取结果。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;node&lt;/code&gt;  是查询返回的节点，我们将其重命名为  &lt;code&gt;movie&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;score&lt;/code&gt;  是匹配度得分，表示查询向量与节点向量之间的相似度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从头到尾一直在使用现有的数据库，但是，要构建自己的 RAG 应用程序，需要从头开始构建一个来表示和存储数据&lt;/p&gt;
&lt;h2 id=&#34;从文本文档构建知识图谱&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#从文本文档构建知识图谱&#34;&gt;#&lt;/a&gt; 从文本文档构建知识图谱&lt;/h2&gt;
&lt;h3 id=&#34;plan-of-attack&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#plan-of-attack&#34;&gt;#&lt;/a&gt; Plan of attack&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;对于每种形式都有不同的文本部分，我们要将他们拆分成块&lt;/li&gt;
&lt;li&gt;拆分成的块就是一个个节点，包含文本原始内容以及一些元数据作为属性&lt;/li&gt;
&lt;li&gt;然后就可以创建向量索引&lt;/li&gt;
&lt;li&gt;将计算文本嵌入以填充每个分块文本的索引&lt;/li&gt;
&lt;li&gt;做完这些就可以进行相似性搜索&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221150701214.png&#34; alt=&#34;image-20241221150701214&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;start-work&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#start-work&#34;&gt;#&lt;/a&gt; start work&lt;/h3&gt;
&lt;p&gt;引入以及全局环境和变量设置&lt;/p&gt;
&lt;p&gt;这里只用了单个的 10k 文件，在实际实践中，需要对每个文件进行重复操作&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221150820335.png&#34; alt=&#34;image-20241221150820335&#34; /&gt;&lt;/p&gt;
&lt;p&gt;取第一个文本，并将其&lt;strong&gt;加载到 python 的一个变量&lt;/strong&gt;中，检查这个变量在 python 中的类型是否为&lt;strong&gt;字典&lt;/strong&gt;，然后&lt;strong&gt;遍历&lt;/strong&gt;这个字典，&lt;strong&gt;看有什么可用的&lt;/strong&gt;，然后取其中一个项目看其文本，只看其前 1500，接下来将它&lt;strong&gt;分割&lt;/strong&gt;为快&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221151215575.png&#34; alt=&#34;image-20241221151215575&#34; /&gt;&lt;/p&gt;
&lt;p&gt;对文本进行分块，先是设置每一个分块的大小都是 2000，有 200 个字符重叠 ，然后执行这个分块将结果给 item1_text_chunks, 可以看到分到的块有 254 块&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221155004607.png&#34; alt=&#34;image-20241221155004607&#34; /&gt;&lt;/p&gt;
&lt;p&gt;接着需要写一个函数，用来遍历文本并进行分块，遍历分块&lt;/p&gt;
&lt;p&gt;在函数中，使用一个数组来存储分块后的数据，先遍历文件中的每一个项目，将每一个项目进行分块后再遍历每一个块，将块中的 信息，赋值，添加到一个数据记录中，附加有元数据的块集合&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221155418608.png&#34; alt=&#34;image-20241221155418608&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后既可以使用这个函数&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221155834149.png&#34; alt=&#34;image-20241221155834149&#34; /&gt;&lt;/p&gt;
&lt;p&gt;要将分块合并到知识图谱中，使用 cypher 语言&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221160118011.png&#34; alt=&#34;image-20241221160118011&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在创建知识图谱之前要确保不会重复数据，就要添加约束索引，唯一 id&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221160355215.png&#34; alt=&#34;image-20241221160355215&#34; /&gt;&lt;/p&gt;
&lt;p&gt;遍历每一个块，对于每一个块执行之前的合并查询语句，并附上参数&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221160613541.png&#34; alt=&#34;image-20241221160613541&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1.assets/image-20241221160717831.png&#34; alt=&#34;image-20241221160717831&#34; /&gt;&lt;/p&gt;
&lt;p&gt;创建一个索引，文本嵌入块&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221160936918.png&#34; alt=&#34;image-20241221160936918&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1.assets/image-20241221161025038.png&#34; alt=&#34;image-20241221161025038&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221161014247.png&#34; alt=&#34;image-20241221161014247&#34; /&gt;&lt;/p&gt;
&lt;p&gt;辅助函数用于相关搜索&lt;/p&gt;
&lt;p&gt;将问题作为参数传入这个函数中，将返回相似得分，节点文本&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221161353906.png&#34; alt=&#34;image-20241221161353906&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221163113893.png&#34; alt=&#34;image-20241221163113893&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221164101325.png&#34; alt=&#34;image-20241221164101325&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221164113215.png&#34; alt=&#34;image-20241221164113215&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221164338065.png&#34; alt=&#34;image-20241221164338065&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://aura-hy.github.io/2025/02/28/tool/git-know/useGit/GitUse/</guid>
            <title>Git的配置与VS图形化的简单使用</title>
            <link>http://aura-hy.github.io/2025/02/28/tool/git-know/useGit/GitUse/</link>
            <category term="工具使用" scheme="http://aura-hy.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/" />
            <category term="git知识" scheme="http://aura-hy.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/git%E7%9F%A5%E8%AF%86/" />
            <category term="Git使用" scheme="http://aura-hy.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/git%E7%9F%A5%E8%AF%86/Git%E4%BD%BF%E7%94%A8/" />
            <pubDate>Fri, 28 Feb 2025 13:53:12 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;git-使用图形化简单教程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-使用图形化简单教程&#34;&gt;#&lt;/a&gt; Git 使用图形化简单教程&lt;/h1&gt;
&lt;h2 id=&#34;git-配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-配置&#34;&gt;#&lt;/a&gt; Git 配置&lt;/h2&gt;
&lt;p&gt;配置文件路径一般在：用户 / 你的用户名&lt;/p&gt;
&lt;p&gt;找到 &lt;code&gt;.gitconfig&lt;/code&gt;  文件&lt;/p&gt;
&lt;p&gt;先把以下代码复制粘贴进去，直接覆盖，原本的不要&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[user]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name = your github name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    email = your primary email address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[credential &amp;quot;https://gitee.com&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    provider = generic&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[url &amp;quot;https://github.com&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    instead0f = git://github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[filter &amp;quot;lfs&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clean = git-lfs clean -- %f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    smudge = git-lfs smudge -- %f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    process = git-lfs filter-process&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    required = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[core]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ignorecase = false# 是否不区分文件名大小写。false - 区分大小写&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    eol = lf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    autocrlf = input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    safecrlf = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    longpaths = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[http]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    proxy = socks5://127.0.0.1:10808 # 代理地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sslVerify = false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[https]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    proxy = socks5://127.0.0.1:10808&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sslVerify = false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;要修改的地方：&lt;/p&gt;
&lt;p&gt;1、[user]&lt;/p&gt;
&lt;p&gt;​	name = 你的 github 名称&lt;/p&gt;
&lt;p&gt;​	email = 复制你 github 中以下图片位置中的字符串&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224232525054.png&#34; alt=&#34;image-20250224232525054&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、[http]、[https]&lt;/p&gt;
&lt;p&gt;如果是用 Steam++（Watt) 加速，就要把 proxy&lt;strong&gt; 都&lt;/strong&gt;注释掉（或删掉）&lt;/p&gt;
&lt;h2 id=&#34;将本地代码上传至github仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将本地代码上传至github仓库&#34;&gt;#&lt;/a&gt; 将本地代码上传至 github 仓库&lt;/h2&gt;
&lt;h3 id=&#34;一-github-仓库创建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-github-仓库创建&#34;&gt;#&lt;/a&gt; 一、GitHub 仓库创建&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;新建仓库&lt;/strong&gt;&lt;br /&gt;
登录 GitHub，点击右上角 &amp;quot;+&amp;quot; 选择 &amp;quot;New repository&amp;quot;，填写仓库名称（建议英文命名），选择公开（Public）或私有（Private）权限。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二-本地代码仓库配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-本地代码仓库配置&#34;&gt;#&lt;/a&gt; 二、本地代码仓库配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;初始化 Git 仓库&lt;/strong&gt;&lt;br /&gt;
在本地项目根目录打开终端，执行命令初始化仓库：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面的 vscode 中的图形化操作可参考目录：相关操作 -&amp;gt; 代码的提交 的以下部分，一样的，就是要绑定远程仓库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加文件至暂存区&lt;/strong&gt;&lt;br /&gt;
使用以下命令添加全部文件（ &lt;code&gt;.&lt;/code&gt;  表示当前目录所有文件）：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;若需指定文件，替换 &lt;code&gt;.&lt;/code&gt;  为文件名即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;提交代码至本地仓库&lt;/strong&gt;&lt;br /&gt;
提交时需附加描述信息：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;Initial commit: project setup&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三-关联远程仓库并推送&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-关联远程仓库并推送&#34;&gt;#&lt;/a&gt; 三、关联远程仓库并推送&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;绑定远程仓库地址&lt;/strong&gt;&lt;br /&gt;
将 GitHub 仓库 URL 关联到本地（替换 URL 为实际地址）：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git remote add origin https://github.com/username/repo.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;推送代码至 GitHub&lt;/strong&gt;&lt;br /&gt;
 执行强制推送（适用于全新仓库）：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：GitHub 默认主分支为 &lt;code&gt;main&lt;/code&gt; ，若本地分支名称为 &lt;code&gt;master&lt;/code&gt; ，需通过 &lt;code&gt;git branch -M main&lt;/code&gt;  重命名分支后再推送。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;将团队的小伙伴拉入仓库中&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将团队的小伙伴拉入仓库中&#34;&gt;#&lt;/a&gt; 将团队的小伙伴拉入仓库中&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224222718963.png&#34; alt=&#34;image-20250224222718963&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;仓库的拉取clone&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仓库的拉取clone&#34;&gt;#&lt;/a&gt; 仓库的拉取（clone）&lt;/h2&gt;
&lt;p&gt;1、在你要拉取的 github 仓库页面中复制 HTTPS&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224214659450.png&#34; alt=&#34;image-20250224214659450&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、在 vscode 中，点击克隆 git 仓库，把复制的粘贴上去，回车&lt;/p&gt;
&lt;p&gt;选择一个地方存储你拉取的仓库，可以在合适的地方新建一个文件夹，即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224214806781.png&#34; alt=&#34;image-20250224214806781&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;相关操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关操作&#34;&gt;#&lt;/a&gt; 相关操作&lt;/h2&gt;
&lt;h3 id=&#34;创建一个分支create-branch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建一个分支create-branch&#34;&gt;#&lt;/a&gt; 创建一个分支（create branch）&lt;/h3&gt;
&lt;p&gt;拉下一个新的项目，第一件事就是创建一个新的分支，并切换到该分支&lt;/p&gt;
&lt;p&gt;1、找到 Branches&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215711907.png&#34; alt=&#34;image-20250224215711907&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、输入新分支的名字，回车，并选择创建和转换到该分支&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215823047.png&#34; alt=&#34;image-20250224215823047&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215939181.png&#34; alt=&#34;image-20250224215939181&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;代码的提交commit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码的提交commit&#34;&gt;#&lt;/a&gt; 代码的提交（commit）&lt;/h3&gt;
&lt;p&gt;自己提交代码前，应该是先 fetch+pull 这个 main 分支（主分支）到本地，然后在本地 merge main 分支到自己分支，最后再把代码更改 commit 到自己的分支&lt;/p&gt;
&lt;p&gt;这里的提交，是本地代码的提交，提交后，代码仍在本地&lt;/p&gt;
&lt;p&gt;每当完成一个功能时，差不多就要提交一次，提交一次不代表就要立马推送 / 请求合并，根据具体情况&lt;/p&gt;
&lt;p&gt;1、暂存&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215135696.png&#34; alt=&#34;image-20250224215135696&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、在 “提交” 上面的框中写上本次提交的备注，正式的会有以下规范：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/20250212-110750.jpg&#34; alt=&#34;(gitImg/20250212-110750.jpg)&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215333507.png&#34; alt=&#34;image-20250224215333507&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、点击提交&lt;/p&gt;
&lt;h3 id=&#34;代码的推送push&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码的推送push&#34;&gt;#&lt;/a&gt; 代码的推送（Push）&lt;/h3&gt;
&lt;p&gt;将本地提交的代码推送到云端（远程），这样全部成员都能看到你分支的代码&lt;/p&gt;
&lt;p&gt;注意在自己的分支&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224220347135.png&#34; alt=&#34;image-20250224220347135&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;发送合并请求pr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#发送合并请求pr&#34;&gt;#&lt;/a&gt; 发送合并请求（PR）&lt;/h3&gt;
&lt;p&gt;1、在自己的分支，点击 Create Pull Request&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224220511909.png&#34; alt=&#34;image-20250224220511909&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、跳转页面到浏览器，创建请求&lt;/p&gt;
&lt;p&gt;可以选择负责代码合并的人（reviewer）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224223029908.png&#34; alt=&#34;image-20250224223029908&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224220704276.png&#34; alt=&#34;image-20250224220704276&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、处理合并请求，被选择负责代码合并的人会在 github 的邮箱中看到请求信息&lt;/p&gt;
&lt;p&gt;如果代码比较简单，自己可以判断是否可以合并，就可以不选择，直接点合并&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224223127743.png&#34; alt=&#34;image-20250224223127743&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;拉取更新的代码fetch-pull&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拉取更新的代码fetch-pull&#34;&gt;#&lt;/a&gt; 拉取更新的代码（fetch、pull）&lt;/h3&gt;
&lt;p&gt;1、main 主干那里点 fetch&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224223421935.png&#34; alt=&#34;image-20250224223421935&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224223504378.png&#34; alt=&#34;image-20250224223504378&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;将主分支合并到自己分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将主分支合并到自己分支&#34;&gt;#&lt;/a&gt; 将主分支合并到自己分支&lt;/h3&gt;
&lt;p&gt;拉取完主分支后，需要更新自己的分支&lt;/p&gt;
&lt;p&gt;就右键主分支，找到 merge 开头的，前提是确保当前是在自己分支&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224235429154.png&#34; alt=&#34;image-20250224235429154&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://aura-hy.github.io/2025/02/25/hello-world/</guid>
            <title>Hello World</title>
            <link>http://aura-hy.github.io/2025/02/25/hello-world/</link>
            <pubDate>Tue, 25 Feb 2025 23:25:03 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://aura-hy.github.io/2024/11/03/My-New-Post/</guid>
            <title>My New Post</title>
            <link>http://aura-hy.github.io/2024/11/03/My-New-Post/</link>
            <pubDate>Sun, 03 Nov 2024 21:33:58 +0800</pubDate>
            <description><![CDATA[  ]]></description>
        </item>
    </channel>
</rss>
