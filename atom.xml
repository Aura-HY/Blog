<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://www.ssshyoo.top</id>
    <title></title>
    <subtitle></subtitle>
    <icon>http://www.ssshyoo.top/images/favicon.ico</icon>
    <link href="http://www.ssshyoo.top" />
    <author>
      <name>Aura-HY</name>
    </author>
    <updated>2025-03-02T08:01:46.466Z</updated>
    <entry>
        <id>http://www.ssshyoo.top/2025/03/02/Shoka%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E8%A1%A5%E5%85%85/</id>
        <title>Shoka主题博客补充</title>
        <link rel="alternate" href="http://www.ssshyoo.top/2025/03/02/Shoka%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E8%A1%A5%E5%85%85/"/>
        <content type="html">&lt;p&gt;这里小小汇总了一下搭建 Shoka 主题博客时可能会用到的参考资料，希望能帮到&lt;/p&gt;
&lt;h1 id=&#34;shoka主题博客补充&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shoka主题博客补充&#34;&gt;#&lt;/a&gt; Shoka 主题博客补充&lt;/h1&gt;
&lt;h2 id=&#34;shokax-主题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shokax-主题&#34;&gt;#&lt;/a&gt; ShokaX 主题&lt;/h2&gt;
&lt;p&gt;我用排除法发现，如果文章全是精选文章，首页就会无法正常显示&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=&#34;&gt;Hexo 主题 Shoka &amp;amp; multi-markdown-it 渲染器使用说明 - Theme Shoka Documentation - 二进制杂谈 - 计算机科学 | Yume Shoka = 有夢書架 = 吾乃天，壶中之天&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;官方文档&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6Lw==&#34;&gt; Hexo-theme-ShokaX&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;图床配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图床配置&#34;&gt;#&lt;/a&gt; 图床配置&lt;/h2&gt;
&lt;p&gt;参考博客 ——&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9meWZhbi5jbi8yMDI0LzAzLzA3L1Nob2thJUU0JUJEJUJGJUU3JTk0JUE4JUU4JTg3JUFBJUU1JUI3JUIxJUU3JTlBJTg0JUU1JTlCJUJFJUU1JUJBJThBLw==&#34;&gt;Shoka 使用自己的图床&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在 markdown 中使用 PicGo 没更新到最新版前踩了一个坑：&lt;/p&gt;
&lt;p&gt;当端口配置没问题时，却上传不了图片，返回 success：false，可能说明你的 github 的图库中已经存在这个图片了，所以上传失败。&lt;/p&gt;
&lt;h2 id=&#34;首页精选分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#首页精选分类&#34;&gt;#&lt;/a&gt; 首页精选分类&lt;/h2&gt;
&lt;p&gt;搞了好久都没搞成，最后才发现是映射之间要有一个空格&lt;/p&gt;
&lt;p&gt;如：计算机科学 (英文冒号)(空格) 英文名        计算机科学: computer-science&lt;/p&gt;
&lt;h2 id=&#34;站内搜索配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#站内搜索配置&#34;&gt;#&lt;/a&gt; 站内搜索配置&lt;/h2&gt;
&lt;h3 id=&#34;配置流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置流程&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6L2d1aWRlL2NvbmZpZy5odG1sIyVFOSU4NSU4RCVFNyVCRCVBRSVFNiVCNSU4MSVFNyVBOCU4Qg==&#34;&gt;配置流程&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;登录 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYWxnb2xpYS5jb20v&#34;&gt;Algoliaopen in new window&lt;/span&gt; 官网，建议使用 Github/Google 账号注册 / 登录。&lt;/li&gt;
&lt;li&gt;进入  &lt;code&gt;Dashboard&lt;/code&gt;  -  &lt;code&gt;Search&lt;/code&gt;  -  &lt;code&gt;Index&lt;/code&gt;  页面，选择上方  &lt;code&gt;+ Create Index&lt;/code&gt;  创建索引，索引名称建议为  &lt;code&gt;shokaX&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;进入  &lt;code&gt;Dashboard&lt;/code&gt;  -  &lt;code&gt;Settings&lt;/code&gt;  -  &lt;code&gt;API Keys&lt;/code&gt;  页面，复制如下数据到上方配置中。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;页面数据&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;对应配置&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;Application ID&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;appId&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;Search-Only API Key&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;apiKey&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;Admin API Key&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;adminApiKey&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;创建的索引名&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;indexName&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;在博客部署前运行  &lt;code&gt;hexo algolia&lt;/code&gt;  上传索引，可在  &lt;code&gt;Dashboard&lt;/code&gt;  -  &lt;code&gt;Search&lt;/code&gt;  -  &lt;code&gt;Index&lt;/code&gt;  页面中查看。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;algolia:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;appId:&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#Your appId&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;apiKey:&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#Your apiKey&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;adminApiKey:&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#Your adminApiKey&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;chunkSize:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;indexName:&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#&amp;quot;shokaX&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;fields:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#必须配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#必须配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;categories&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#推荐配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;content:strip:truncate,0,2000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;gallery&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;photos&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;tags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
        <updated>2025-03-02T08:01:46.466Z</updated>
    </entry>
    <entry>
        <id>http://www.ssshyoo.top/2025/02/28/tool/git-know/GitUse/</id>
        <title>Git的配置与VS图形化的简单使用</title>
        <link rel="alternate" href="http://www.ssshyoo.top/2025/02/28/tool/git-know/GitUse/"/>
        <content type="html">&lt;h1 id=&#34;git-使用图形化简单教程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-使用图形化简单教程&#34;&gt;#&lt;/a&gt; Git 使用图形化简单教程&lt;/h1&gt;
&lt;h2 id=&#34;git-配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-配置&#34;&gt;#&lt;/a&gt; Git 配置&lt;/h2&gt;
&lt;p&gt;配置文件路径一般在：用户 / 你的用户名&lt;/p&gt;
&lt;p&gt;找到 &lt;code&gt;.gitconfig&lt;/code&gt;  文件&lt;/p&gt;
&lt;p&gt;先把以下代码复制粘贴进去，直接覆盖，原本的不要&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[user]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name = your github name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    email = your primary email address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[credential &amp;quot;https://gitee.com&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    provider = generic&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[url &amp;quot;https://github.com&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    instead0f = git://github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[filter &amp;quot;lfs&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clean = git-lfs clean -- %f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    smudge = git-lfs smudge -- %f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    process = git-lfs filter-process&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    required = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[core]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ignorecase = false# 是否不区分文件名大小写。false - 区分大小写&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    eol = lf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    autocrlf = input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    safecrlf = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    longpaths = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[http]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    proxy = socks5://127.0.0.1:10808 # 代理地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sslVerify = false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[https]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    proxy = socks5://127.0.0.1:10808&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sslVerify = false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;要修改的地方：&lt;/p&gt;
&lt;p&gt;1、[user]&lt;/p&gt;
&lt;p&gt;​	name = 你的 github 名称&lt;/p&gt;
&lt;p&gt;​	email = 复制你 github 中以下图片位置中的字符串&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224232525054.png&#34; alt=&#34;image-20250224232525054&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、[http]、[https]&lt;/p&gt;
&lt;p&gt;如果是用 Steam++（Watt) 加速，就要把 proxy&lt;strong&gt; 都&lt;/strong&gt;注释掉（或删掉）&lt;/p&gt;
&lt;h2 id=&#34;将本地代码上传至github仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将本地代码上传至github仓库&#34;&gt;#&lt;/a&gt; 将本地代码上传至 github 仓库&lt;/h2&gt;
&lt;h3 id=&#34;一-github-仓库创建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-github-仓库创建&#34;&gt;#&lt;/a&gt; 一、GitHub 仓库创建&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;新建仓库&lt;/strong&gt;&lt;br /&gt;
登录 GitHub，点击右上角 &amp;quot;+&amp;quot; 选择 &amp;quot;New repository&amp;quot;，填写仓库名称（建议英文命名），选择公开（Public）或私有（Private）权限。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二-本地代码仓库配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-本地代码仓库配置&#34;&gt;#&lt;/a&gt; 二、本地代码仓库配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;初始化 Git 仓库&lt;/strong&gt;&lt;br /&gt;
在本地项目根目录打开终端，执行命令初始化仓库：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面的 vscode 中的图形化操作可参考目录：相关操作 -&amp;gt; 代码的提交 的以下部分，一样的，就是要绑定远程仓库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;添加文件至暂存区&lt;/strong&gt;&lt;br /&gt;
使用以下命令添加全部文件（ &lt;code&gt;.&lt;/code&gt;  表示当前目录所有文件）：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;若需指定文件，替换 &lt;code&gt;.&lt;/code&gt;  为文件名即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;提交代码至本地仓库&lt;/strong&gt;&lt;br /&gt;
提交时需附加描述信息：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;Initial commit: project setup&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三-关联远程仓库并推送&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-关联远程仓库并推送&#34;&gt;#&lt;/a&gt; 三、关联远程仓库并推送&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;绑定远程仓库地址&lt;/strong&gt;&lt;br /&gt;
将 GitHub 仓库 URL 关联到本地（替换 URL 为实际地址）：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git remote add origin https://github.com/username/repo.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;推送代码至 GitHub&lt;/strong&gt;&lt;br /&gt;
 执行强制推送（适用于全新仓库）：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：GitHub 默认主分支为 &lt;code&gt;main&lt;/code&gt; ，若本地分支名称为 &lt;code&gt;master&lt;/code&gt; ，需通过 &lt;code&gt;git branch -M main&lt;/code&gt;  重命名分支后再推送。&lt;/p&gt;
&lt;p&gt;首次推送可能需要生成 Github 个人访问令牌，参考操作如下：&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250302160823076.png&#34; alt=&#34;image-20250302160823076&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;将团队的小伙伴拉入仓库中&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将团队的小伙伴拉入仓库中&#34;&gt;#&lt;/a&gt; 将团队的小伙伴拉入仓库中&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224222718963.png&#34; alt=&#34;image-20250224222718963&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;仓库的拉取clone&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仓库的拉取clone&#34;&gt;#&lt;/a&gt; 仓库的拉取（clone）&lt;/h2&gt;
&lt;p&gt;1、在你要拉取的 github 仓库页面中复制 HTTPS&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224214659450.png&#34; alt=&#34;image-20250224214659450&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、在 vscode 中，点击克隆 git 仓库，把复制的粘贴上去，回车&lt;/p&gt;
&lt;p&gt;选择一个地方存储你拉取的仓库，可以在合适的地方新建一个文件夹，即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224214806781.png&#34; alt=&#34;image-20250224214806781&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;点击之后会跳转到浏览器进行 github 账户登录验证，输入账号的密码就行，有的登录过 github 会自动进行账号身份识别，选择用户就可以了，选择完之后就可以看到我们创建的仓库了，点击需要添加的库，输入你的仓库名字，仓库就配置完成了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;通过ssh拉取仓库clone&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通过ssh拉取仓库clone&#34;&gt;#&lt;/a&gt; 通过 ssh 拉取仓库（clone）&lt;/h2&gt;
&lt;p&gt;如果通过 https 拉取仓库会卡在 github 账户登录验证那一块的话，就转用 ssh&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Jpbl9uaUIvYXJ0aWNsZS9kZXRhaWxzLzEzNTkxNTczOA==&#34;&gt;vscode 如何连接 github/gitee 远程仓库详细步骤（ssh+https）最全最详细_vscode github-CSDN 博客&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;相关操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关操作&#34;&gt;#&lt;/a&gt; 相关操作&lt;/h2&gt;
&lt;h3 id=&#34;创建一个分支create-branch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建一个分支create-branch&#34;&gt;#&lt;/a&gt; 创建一个分支（create branch）&lt;/h3&gt;
&lt;p&gt;拉下一个新的项目，第一件事就是创建一个新的分支，并切换到该分支&lt;/p&gt;
&lt;p&gt;1、找到 Branches&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215711907.png&#34; alt=&#34;image-20250224215711907&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、输入新分支的名字，回车，并选择创建和转换到该分支&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215823047.png&#34; alt=&#34;image-20250224215823047&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215939181.png&#34; alt=&#34;image-20250224215939181&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;代码的提交commit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码的提交commit&#34;&gt;#&lt;/a&gt; 代码的提交（commit）&lt;/h3&gt;
&lt;p&gt;自己提交代码前，应该是先 fetch+pull 这个 main 分支（主分支）到本地，然后在本地 merge main 分支到自己分支，最后再把代码更改 commit 到自己的分支&lt;/p&gt;
&lt;p&gt;这里的提交，是本地代码的提交，提交后，代码仍在本地&lt;/p&gt;
&lt;p&gt;每当完成一个功能时，差不多就要提交一次，提交一次不代表就要立马推送 / 请求合并，根据具体情况&lt;/p&gt;
&lt;p&gt;1、暂存&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215135696.png&#34; alt=&#34;image-20250224215135696&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、在 “提交” 上面的框中写上本次提交的备注，正式的会有以下规范：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/20250212-110750.jpg&#34; alt=&#34;(gitImg/20250212-110750.jpg)&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224215333507.png&#34; alt=&#34;image-20250224215333507&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、点击提交&lt;/p&gt;
&lt;h3 id=&#34;代码的推送push&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码的推送push&#34;&gt;#&lt;/a&gt; 代码的推送（Push）&lt;/h3&gt;
&lt;p&gt;将本地提交的代码推送到云端（远程），这样全部成员都能看到你分支的代码&lt;/p&gt;
&lt;p&gt;注意在自己的分支&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224220347135.png&#34; alt=&#34;image-20250224220347135&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;发送合并请求pr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#发送合并请求pr&#34;&gt;#&lt;/a&gt; 发送合并请求（PR）&lt;/h3&gt;
&lt;p&gt;1、在自己的分支，点击 Create Pull Request&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224220511909.png&#34; alt=&#34;image-20250224220511909&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、跳转页面到浏览器，创建请求&lt;/p&gt;
&lt;p&gt;可以选择负责代码合并的人（reviewer）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224223029908.png&#34; alt=&#34;image-20250224223029908&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224220704276.png&#34; alt=&#34;image-20250224220704276&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、处理合并请求，被选择负责代码合并的人会在 github 的邮箱中看到请求信息&lt;/p&gt;
&lt;p&gt;如果代码比较简单，自己可以判断是否可以合并，就可以不选择，直接点合并&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224223127743.png&#34; alt=&#34;image-20250224223127743&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;拉取更新的代码fetch-pull&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拉取更新的代码fetch-pull&#34;&gt;#&lt;/a&gt; 拉取更新的代码（fetch、pull）&lt;/h3&gt;
&lt;p&gt;1、main 主干那里点 fetch&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224223421935.png&#34; alt=&#34;image-20250224223421935&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224223504378.png&#34; alt=&#34;image-20250224223504378&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;将主分支合并到自己分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将主分支合并到自己分支&#34;&gt;#&lt;/a&gt; 将主分支合并到自己分支&lt;/h3&gt;
&lt;p&gt;拉取完主分支后，需要更新自己的分支&lt;/p&gt;
&lt;p&gt;就右键主分支，找到 merge 开头的，前提是确保当前是在自己分支&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20250224235429154.png&#34; alt=&#34;image-20250224235429154&#34; /&gt;&lt;/p&gt;
</content>
        <category term="工具使用" scheme="http://www.ssshyoo.top/categories/tool/" />
        <category term="git知识" scheme="http://www.ssshyoo.top/categories/tool/git-know/" />
        <updated>2025-02-28T05:53:12.499Z</updated>
    </entry>
    <entry>
        <id>http://www.ssshyoo.top/2024/12/21/knowledgeGraph/zeroToOne/</id>
        <title>从零开始的知识图谱</title>
        <link rel="alternate" href="http://www.ssshyoo.top/2024/12/21/knowledgeGraph/zeroToOne/"/>
        <content type="html">&lt;h1 id=&#34;知识图谱&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识图谱&#34;&gt;#&lt;/a&gt; 知识图谱&lt;/h1&gt;
&lt;h2 id=&#34;安装neo4j图数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装neo4j图数据库&#34;&gt;#&lt;/a&gt; 安装 neo4j 图数据库&lt;/h2&gt;
&lt;p&gt;jdk 版本只支持 11，需要到系统环境变量中去改（现在已经改至 11）&lt;/p&gt;
&lt;h3 id=&#34;启动neo4j&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动neo4j&#34;&gt;#&lt;/a&gt; 启动 neo4j&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 neo4j 解压的文件夹的 bin 文件夹下，打开 cmd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 / 卸载服务（cmd 命令）：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 安装
neo4j install-service
# 卸载
neo4j uninstall-service
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.  启动服务：neo4j.bat console。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5. 浏览器打开：[http://localhost:7474/](https://link.zhihu.com/?target=http%3A//localhost%3A7474/)，默认账号和密码均为：neo4j。首次登录会提醒修改密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6. 常见命令：如开始服务、停止服务、重启服务、安装、卸载、更新等。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   Usage: neo4j &amp;#123; console | start | stop | restart | status | install-service | uninstall-service | update-service &amp;#125; &amp;lt; -Verbose &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 知识图谱基础知识&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1. 存储信息在节点和关系中的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2. 每个节点和关系都可以有属性、键值对&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3. 节点可以被赋予标签以帮助将它们分组在一起&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4. 关系始终有类型和方向&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;![image-20241220202343473](https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241220202343473.png)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LangChain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 查询知识图谱&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### Querying the movie knowledge graph&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;取一个Python中的多行字符串，赋值给cypher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```python&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cypher=&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	MATCH(n)  #匹配子句，模式匹配，可以寻找的最小模式匹配是一个单节点模式·将结果赋值给n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	RETURN count(n) As numberOfNodes #返回这些节点的个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;要运行查询本身，就要利用之前设置好的 LangChain 集成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;result = kg.query(cypher)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result   ===&amp;gt;[&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;numberOfNodes&amp;#x27;&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;171&lt;/span&gt;&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cypher=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	MATCH(m:movie)  //寻找一个标签是电影的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	RETURN count(m) As numberOfMovie &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;kg.query(cypher)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cypher=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	MATCH(tom:Person &amp;#123;name:&amp;quot;Tom Hanks&amp;quot;&amp;#125;)  //寻找一个标签是人的，名字属性是&amp;quot;Tom Hanks&amp;quot;的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	RETURN tom&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;kg,query(cypher)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;为rag准备文本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为rag准备文本&#34;&gt;#&lt;/a&gt; 为 RAG 准备文本&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; dotenv &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; load_dotenv&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain_community.graphs &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Neo4jGraph&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Load from enviroment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;load_dotenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../.env.studiomac&amp;#x27;&lt;/span&gt;,override=Ture)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NEO4J_URI = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;NEO4J_URI&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NEO4J_USERNAME = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;NEO4J_USERNAME&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NEO4J_PASSWORD = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;NEO4J_PASSWORD&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NEO4J_DATABASE = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;NEO4J_DATABASE&amp;#x27;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OPENAI_API_KEY = os.getenv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;OPENAI_API_KEY&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 创建与知识图的连接，以便发送一些查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kg = Neo4jGraph(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	url=NEO4J_URI,username=USERNAME,password=PASSWORD,database=DATABASE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;启用向量搜索的第一步是创建一个向量索引&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241220211902481.png&#34; alt=&#34;image-20241220211902481&#34; /&gt;&lt;/p&gt;
&lt;p&gt;要关注的是 OPTIONS 部分中向量的索引有多大，维度有多大（这里是 OpenAI 嵌入模型的默认大小）&lt;/p&gt;
&lt;p&gt;还有相似函数&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;question = &amp;quot;What movies are about adenture？&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;kg.query(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	WITH ganai.vector.encode(&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		$question,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		&amp;quot;OpenAI&amp;quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		&amp;#123;token:$openAiApiKey&amp;#125;) AS question_embedding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	CALL db.index.vector.queryNodes(&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		&amp;#x27;movie_tagline_embeddings&amp;#x27;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		$top_k,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		quesion_embedding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;		) YIELD node AS movie,score&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	RETURN movie.title,movie.tagline,score&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;params=&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;openAiApiKey&amp;quot;&lt;/span&gt;:OPENAI_API_KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&amp;quot;question&amp;quot;&lt;/span&gt;:quesion,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&amp;quot;top_k&amp;quot;&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;WITH&lt;/code&gt;  用于将前一句的结果传递给下一句，并且可以在这个过程中进行计算或过滤。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ganai.vector.encode&lt;/code&gt; : 这是一个自定义的函数调用，可能是通过扩展或插件添加到图数据库中的。它接受三个参数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AS question_embedding&lt;/code&gt; : 将  &lt;code&gt;ganai.vector.encode&lt;/code&gt;  函数返回的结果（即问题的向量表示）赋值给一个新的变量  &lt;code&gt;question_embedding&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;CALL&lt;/code&gt; &lt;/strong&gt;: 调用一个过程或函数&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;&#39;movie_tagline_embeddings&#39;&lt;/code&gt; &lt;/strong&gt;: 指定要查询的向量索引名称，这里是指包含电影标语嵌入的索引。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;question_embedding&lt;/code&gt; &lt;/strong&gt;: 使用之前生成的问题嵌入作为查询条件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;YIELD&lt;/code&gt;  关键字用于从被调用的过程中提取结果。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;node&lt;/code&gt;  是查询返回的节点，我们将其重命名为  &lt;code&gt;movie&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;score&lt;/code&gt;  是匹配度得分，表示查询向量与节点向量之间的相似度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从头到尾一直在使用现有的数据库，但是，要构建自己的 RAG 应用程序，需要从头开始构建一个来表示和存储数据&lt;/p&gt;
&lt;h2 id=&#34;从文本文档构建知识图谱&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#从文本文档构建知识图谱&#34;&gt;#&lt;/a&gt; 从文本文档构建知识图谱&lt;/h2&gt;
&lt;h3 id=&#34;plan-of-attack&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#plan-of-attack&#34;&gt;#&lt;/a&gt; Plan of attack&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;对于每种形式都有不同的文本部分，我们要将他们拆分成块&lt;/li&gt;
&lt;li&gt;拆分成的块就是一个个节点，包含文本原始内容以及一些元数据作为属性&lt;/li&gt;
&lt;li&gt;然后就可以创建向量索引&lt;/li&gt;
&lt;li&gt;将计算文本嵌入以填充每个分块文本的索引&lt;/li&gt;
&lt;li&gt;做完这些就可以进行相似性搜索&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221150701214.png&#34; alt=&#34;image-20241221150701214&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;start-work&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#start-work&#34;&gt;#&lt;/a&gt; start work&lt;/h3&gt;
&lt;p&gt;引入以及全局环境和变量设置&lt;/p&gt;
&lt;p&gt;这里只用了单个的 10k 文件，在实际实践中，需要对每个文件进行重复操作&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221150820335.png&#34; alt=&#34;image-20241221150820335&#34; /&gt;&lt;/p&gt;
&lt;p&gt;取第一个文本，并将其&lt;strong&gt;加载到 python 的一个变量&lt;/strong&gt;中，检查这个变量在 python 中的类型是否为&lt;strong&gt;字典&lt;/strong&gt;，然后&lt;strong&gt;遍历&lt;/strong&gt;这个字典，&lt;strong&gt;看有什么可用的&lt;/strong&gt;，然后取其中一个项目看其文本，只看其前 1500，接下来将它&lt;strong&gt;分割&lt;/strong&gt;为快&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221151215575.png&#34; alt=&#34;image-20241221151215575&#34; /&gt;&lt;/p&gt;
&lt;p&gt;对文本进行分块，先是设置每一个分块的大小都是 2000，有 200 个字符重叠 ，然后执行这个分块将结果给 item1_text_chunks, 可以看到分到的块有 254 块&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221155004607.png&#34; alt=&#34;image-20241221155004607&#34; /&gt;&lt;/p&gt;
&lt;p&gt;接着需要写一个函数，用来遍历文本并进行分块，遍历分块&lt;/p&gt;
&lt;p&gt;在函数中，使用一个数组来存储分块后的数据，先遍历文件中的每一个项目，将每一个项目进行分块后再遍历每一个块，将块中的 信息，赋值，添加到一个数据记录中，附加有元数据的块集合&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221155418608.png&#34; alt=&#34;image-20241221155418608&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后既可以使用这个函数&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221155834149.png&#34; alt=&#34;image-20241221155834149&#34; /&gt;&lt;/p&gt;
&lt;p&gt;要将分块合并到知识图谱中，使用 cypher 语言&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221160118011.png&#34; alt=&#34;image-20241221160118011&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在创建知识图谱之前要确保不会重复数据，就要添加约束索引，唯一 id&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221160355215.png&#34; alt=&#34;image-20241221160355215&#34; /&gt;&lt;/p&gt;
&lt;p&gt;遍历每一个块，对于每一个块执行之前的合并查询语句，并附上参数&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221160613541.png&#34; alt=&#34;image-20241221160613541&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221160717831.png&#34; alt=&#34;image-20241221160717831&#34; /&gt;&lt;/p&gt;
&lt;p&gt;创建一个索引，文本嵌入块&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221160936918.png&#34; alt=&#34;image-20241221160936918&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221161025038.png&#34; alt=&#34;image-20241221161025038&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221161014247.png&#34; alt=&#34;image-20241221161014247&#34; /&gt;&lt;/p&gt;
&lt;p&gt;辅助函数用于相关搜索&lt;/p&gt;
&lt;p&gt;将问题作为参数传入这个函数中，将返回相似得分，节点文本&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221161353906.png&#34; alt=&#34;image-20241221161353906&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221163113893.png&#34; alt=&#34;image-20241221163113893&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221164101325.png&#34; alt=&#34;image-20241221164101325&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221164113215.png&#34; alt=&#34;image-20241221164113215&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20241221164338065.png&#34; alt=&#34;image-20241221164338065&#34; /&gt;&lt;/p&gt;
</content>
        <category term="知识图谱" scheme="http://www.ssshyoo.top/categories/knowledgeGraph/" />
        <updated>2024-12-20T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.ssshyoo.top/2024/08/07/openCV%E5%9B%BE%E7%89%87%E5%92%8C%E8%A7%86%E9%A2%91%E5%A4%84%E7%90%86/</id>
        <title>openCV图片和视频处理</title>
        <link rel="alternate" href="http://www.ssshyoo.top/2024/08/07/openCV%E5%9B%BE%E7%89%87%E5%92%8C%E8%A7%86%E9%A2%91%E5%A4%84%E7%90%86/"/>
        <content type="html">&lt;h1 id=&#34;opencvqt&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opencvqt&#34;&gt;#&lt;/a&gt; OpenCV+QT&lt;/h1&gt;
&lt;h2 id=&#34;文件项目配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件项目配置&#34;&gt;#&lt;/a&gt; 文件项目配置&lt;/h2&gt;
&lt;p&gt;属性（相对路径）&lt;/p&gt;
&lt;p&gt;配置调试选择 &lt;code&gt;x64&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;常规 —— 输出目录 —— &lt;code&gt;..\..\bin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;调试 —— 工作目录 —— &lt;code&gt;..\..\bin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;C/C++—— 附加包含目录 —— &lt;code&gt;..\include&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;链接器 —— 常规 —— 附加库目录 —— &lt;code&gt;..\..\lib&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;链接器 —— 输入 —— 附加依赖项 —— 在前面加 &lt;code&gt;opencv_world331d.dll&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;开发遇到的坑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开发遇到的坑&#34;&gt;#&lt;/a&gt; 开发遇到的坑&lt;/h2&gt;
&lt;h3 id=&#34;ui-文件打不开&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ui-文件打不开&#34;&gt;#&lt;/a&gt; ui 文件打不开&lt;/h3&gt;
&lt;p&gt;需要手动右键 &lt;code&gt;ui文件&lt;/code&gt; 设置打开方式，选择 &lt;code&gt;qtdesigner.exe&lt;/code&gt; ，并设置为默认打开方式&lt;/p&gt;
&lt;h3 id=&#34;源文件打不开&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#源文件打不开&#34;&gt;#&lt;/a&gt; 源文件打不开&lt;/h3&gt;
&lt;p&gt;要考虑是否创建项目的时候漏了一些库没有选择，可以参照 pro 文件和 cmakelist 文件的配置看少配置了什么&lt;/p&gt;
&lt;h2 id=&#34;mat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mat&#34;&gt;#&lt;/a&gt; mat&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Mat&lt;/code&gt;  是 OpenCV 中的基本图像容器。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//地址遍历不一定连续的Mat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; row = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; row &amp;lt; mat.rows; row++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; col = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; col &amp;lt; mat.cols; col++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			(&amp;amp;mat.data[row * mat.step])[col * es] = &lt;span class=&#34;number&#34;&gt;80&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//B&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			(&amp;amp;mat.data[row * mat.step])[col * es&lt;span class=&#34;number&#34;&gt;+1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			(&amp;amp;mat.data[row * mat.step])[col * es&lt;span class=&#34;number&#34;&gt;+2&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;mat.data&lt;/code&gt;  是指向图像数据的指针，类型是  &lt;code&gt;uchar*&lt;/code&gt; （无符号字符指针），表示图像的原始像素数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mat.step&lt;/code&gt;  是每行像素数据在内存中的字节数（步长），它可以比  &lt;code&gt;mat.cols * es&lt;/code&gt;  大，特别是在行有对齐要求时。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;es&lt;/code&gt;  是每个像素的字节数（对于  &lt;code&gt;CV_8UC3&lt;/code&gt;  类型， &lt;code&gt;es&lt;/code&gt;  是 3，因为每个像素有 3 个通道：B、G 和 R）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;row * mat.step&lt;/code&gt;  计算出当前行在图像数据中的起始位置。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;col * es&lt;/code&gt;  计算出当前列在当前行中的偏移量。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;mat.data[row * mat.step]&lt;/code&gt;  得到当前行的起始地址，再加上  &lt;code&gt;col * es&lt;/code&gt;  得到当前像素的起始地址。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;roi感兴趣区域裁剪图像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#roi感兴趣区域裁剪图像&#34;&gt;#&lt;/a&gt; ROI 感兴趣区域裁剪图像&lt;/h2&gt;
&lt;h3 id=&#34;cvrect-rect100100300300&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cvrect-rect100100300300&#34;&gt;#&lt;/a&gt;  &lt;code&gt;cv::Rect rect(100,100,300,300)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;100: 横向位置 100&lt;/p&gt;
&lt;p&gt;100：从上往下 100&lt;/p&gt;
&lt;p&gt;然后在这个点取一个矩形 300*300&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* argv[])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Mat src = &lt;span class=&#34;built_in&#34;&gt;imread&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1.png&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 定义一个矩形区域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;Rect &lt;span class=&#34;title&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Mat roi = &lt;span class=&#34;built_in&#34;&gt;src&lt;/span&gt;(rect);&lt;span class=&#34;comment&#34;&gt;// 提取该矩形区域作为ROI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	MatSize s = roi.size;&lt;span class=&#34;comment&#34;&gt;// 获取ROI的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//创建一个自动调整大小的窗口，其大小与显示的图像相匹配。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;namedWindow&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;roi&amp;quot;&lt;/span&gt;,WINDOW_AUTOSIZE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;imshow&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;roi&amp;quot;&lt;/span&gt;, roi);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;namedWindow&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;imshow&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;, src);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;waitKey&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;像素格式和灰度图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#像素格式和灰度图&#34;&gt;#&lt;/a&gt; 像素格式和灰度图&lt;/h2&gt;
&lt;h3 id=&#34;rgb&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rgb&#34;&gt;#&lt;/a&gt; RGB&lt;/h3&gt;
&lt;p&gt;显卡输出的数据是 RGB 形式的，三个字节一个像素&lt;/p&gt;
&lt;h3 id=&#34;yuv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yuv&#34;&gt;#&lt;/a&gt; YUV&lt;/h3&gt;
&lt;p&gt;亮度，色度，饱和度，电视，黑白电视，Y 信号就行&lt;/p&gt;
&lt;p&gt;存储空间会比 RGB 小，两个字节一个像素&lt;/p&gt;
&lt;p&gt;压缩算法基于 YUV，更利于做压缩算法，都是转化为 YUV 然后用压缩算法&lt;/p&gt;
&lt;p&gt;图像处理，最终显示的时候要把 YUV 转换为 RGB&lt;/p&gt;
&lt;h3 id=&#34;rgay&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rgay&#34;&gt;#&lt;/a&gt; RGAY&lt;/h3&gt;
&lt;p&gt;灰度图，一个字节 0~25&lt;/p&gt;
&lt;p&gt;一个字节一个像素  ，高速摄影&lt;/p&gt;
&lt;h3 id=&#34;cvtcolorsrcimgcolor_bgr2gray&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cvtcolorsrcimgcolor_bgr2gray&#34;&gt;#&lt;/a&gt;  &lt;code&gt;cvtColor(src,img,COLOR_BGR2GRAY)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;#include&amp;lt;opencv2/imgproc.hpp&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;格式转换，BGR 转换为灰度图&lt;/p&gt;
&lt;h3 id=&#34;手动实现转换灰度图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#手动实现转换灰度图&#34;&gt;#&lt;/a&gt; 手动实现转换灰度图&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//手动实现转换灰度图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//des没有加引用会造成错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;RGBToGray&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Mat src, Mat &amp;amp;des)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//GRay = (R*30+G*59+B*11+50)/100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	des.&lt;span class=&#34;built_in&#34;&gt;create&lt;/span&gt;(src.rows, src.cols, CV_8UC1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; r = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; r &amp;lt; src.rows; r++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; c &amp;lt; src.rows; c++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Vec3b&amp;amp; m = src.&lt;span class=&#34;built_in&#34;&gt;at&lt;/span&gt;&amp;lt;Vec3b&amp;gt;(r, c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; gray = (m[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt; + m[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt; + m[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;) / &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			des.&lt;span class=&#34;built_in&#34;&gt;at&lt;/span&gt;&amp;lt;uchar&amp;gt;(r, c) = gray;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;二值化和阈值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二值化和阈值&#34;&gt;#&lt;/a&gt; 二值化和阈值&lt;/h2&gt;
&lt;h3 id=&#34;二值化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二值化&#34;&gt;#&lt;/a&gt; 二值化&lt;/h3&gt;
&lt;p&gt;图片的一种存储方式&lt;/p&gt;
&lt;p&gt;一个黑一个白&lt;/p&gt;
&lt;p&gt;有大概五种算法&lt;/p&gt;
&lt;h3 id=&#34;1-thresh_binary二进制阈值化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-thresh_binary二进制阈值化&#34;&gt;#&lt;/a&gt; 1、 &lt;code&gt;THRESH_BINARY&lt;/code&gt;  二进制阈值化&lt;/h3&gt;
&lt;h3 id=&#34;2-thresh_binary_inv反二进制阈值化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-thresh_binary_inv反二进制阈值化&#34;&gt;#&lt;/a&gt; 2、 &lt;code&gt;THRESH_BINARY_INV&lt;/code&gt;  反二进制阈值化&lt;/h3&gt;
&lt;p&gt;根据参数，如果满足条件就变成白色，如果不满足就变成黑色，反向处理&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//二进制阈值化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//（原图，目标图，阈值，最大值（这里255是白色的意思），方法）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;threshold&lt;/span&gt;(gray, bin, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;,THRESH_BINARY);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//反二进制阈值化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;threshold&lt;/span&gt;(gray, ibin, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;, THRESH_BINARY_INV);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;改变图片的对比度和亮度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#改变图片的对比度和亮度&#34;&gt;#&lt;/a&gt; 改变图片的对比度和亮度&lt;/h2&gt;
&lt;h3 id=&#34;gij-afij-b&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gij-afij-b&#34;&gt;#&lt;/a&gt;  &lt;code&gt;g(i,j) = a*f(i,j) + b&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;目标像素 = a (对比度) * 原始颜色 + b (亮度)&lt;/p&gt;
&lt;p&gt;a 1.0~3.0 (对比)&lt;/p&gt;
&lt;p&gt;b 0~100 (亮度)&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ChangeGain&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Mat&amp;amp; src, Mat&amp;amp; des, &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; a, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//`g(i,j) = a*f(i,j) + b`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	des.&lt;span class=&#34;built_in&#34;&gt;create&lt;/span&gt;(src.rows, src.cols, src.&lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; r = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; r &amp;lt; src.rows; r++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; c &amp;lt; src.cols; c++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				des.&lt;span class=&#34;built_in&#34;&gt;at&lt;/span&gt;&amp;lt;Vec3b&amp;gt;(r, c)[i] = &lt;span class=&#34;built_in&#34;&gt;saturate_cast&lt;/span&gt;&amp;lt;uchar&amp;gt;(a * src.&lt;span class=&#34;built_in&#34;&gt;at&lt;/span&gt;&amp;lt;Vec3b&amp;gt;(r, c)[i] + b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;saturate_castuchar防止溢出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#saturate_castuchar防止溢出&#34;&gt;#&lt;/a&gt;  &lt;code&gt;saturate_cast&amp;lt;uchar&amp;gt;&lt;/code&gt;  防止溢出&lt;/h3&gt;
&lt;p&gt;可能会溢出，超过 255，就不是全白，反射，变成了全黑，不是我们想要的，所以要防止溢出，设置超过 255 它就是 255，全白，R 这个通道超过 255 就是全红，小于 0 就设为 0&lt;/p&gt;
&lt;h3 id=&#34;opencv函数convertto&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opencv函数convertto&#34;&gt;#&lt;/a&gt; opencv 函数 &lt;code&gt;convertTo()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//main()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//调整对比度和亮度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Mat src = &lt;span class=&#34;built_in&#34;&gt;imread&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1.png&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Mat des;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;PrintMs&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;ChangeGain&lt;/span&gt;(src, des, &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;PrintMs&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;ChangeGain&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Mat des2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//使用opencv的函数，测试体现convertTo更快&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//-1表示与原图src一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src.&lt;span class=&#34;built_in&#34;&gt;convertTo&lt;/span&gt;(des2, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;PrintMs&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;convertTo&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;图像尺寸调整&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图像尺寸调整&#34;&gt;#&lt;/a&gt; 图像尺寸调整&lt;/h2&gt;
&lt;h3 id=&#34;inter_nearest邻近算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inter_nearest邻近算法&#34;&gt;#&lt;/a&gt;  &lt;code&gt;INTER_NEAREST&lt;/code&gt;  邻近算法&lt;/h3&gt;
&lt;p&gt;小变大 —— 拷贝周围的像素，会生成马赛克&lt;/p&gt;
&lt;h4 id=&#34;自定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义&#34;&gt;#&lt;/a&gt; 自定义&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; sx,sy = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//原图对应的坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; fy = &lt;span class=&#34;built_in&#34;&gt;float&lt;/span&gt;(src.rows)/out.rows;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; fx = &lt;span class=&#34;built_in&#34;&gt;float&lt;/span&gt;(src.cols)/out.cols;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;y &amp;lt; out.rows;y++ )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sy = fy * y + &lt;span class=&#34;number&#34;&gt;0.5&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//四舍五入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;x &amp;lt; out.cols;x++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sx = fx * x &lt;span class=&#34;number&#34;&gt;+0.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        out.&lt;span class=&#34;built_in&#34;&gt;at&lt;/span&gt;&amp;lt;Vec3b&amp;gt;(x,y) = src.&lt;span class=&#34;built_in&#34;&gt;at&lt;/span&gt;&amp;lt;Vec3b&amp;gt;(sy,sx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//自定义缩放代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;xresize&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Mat&amp;amp; src, Mat&amp;amp; des, Size size)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//type()指的是这个类型是RGB还是灰度图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	des.&lt;span class=&#34;built_in&#34;&gt;create&lt;/span&gt;(size, src.&lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; sx, sy = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//原图对应的坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; fy = &lt;span class=&#34;built_in&#34;&gt;float&lt;/span&gt;(src.rows) / des.rows;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; fx = &lt;span class=&#34;built_in&#34;&gt;float&lt;/span&gt;(src.cols) / des.cols;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; y &amp;lt; des.rows; y++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		sy = fy * y + &lt;span class=&#34;number&#34;&gt;0.5&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//四舍五入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; x &amp;lt; des.cols; x++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			sx = fx * x + &lt;span class=&#34;number&#34;&gt;0.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			des.&lt;span class=&#34;built_in&#34;&gt;at&lt;/span&gt;&amp;lt;Vec3b&amp;gt;(x, y) = src.&lt;span class=&#34;built_in&#34;&gt;at&lt;/span&gt;&amp;lt;Vec3b&amp;gt;(sy, sx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//main()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Mat src = &lt;span class=&#34;built_in&#34;&gt;imread&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1.png&amp;quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Mat img128;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//原图，目标图，放缩尺寸&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;xresize&lt;/span&gt;(src, img128, &lt;span class=&#34;built_in&#34;&gt;Size&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;opencv的-resize&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opencv的-resize&#34;&gt;#&lt;/a&gt; OpenCV 的  &lt;code&gt;resize()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//opencv自带的函数，有多线程处理、优化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;resize&lt;/span&gt;(src, img256, &lt;span class=&#34;built_in&#34;&gt;Size&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;，INTER_NEAREST);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第 4、5 个参数表示 fx,fy, 当 Size 为空时，它们作为一个比例来乘以原图的大小&lt;/p&gt;
&lt;p&gt;第 6 个参数，算法类型，默认是双线性插值，这里是邻近算法&lt;/p&gt;
&lt;h3 id=&#34;cv_inter_linear-双线性插值缺省使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cv_inter_linear-双线性插值缺省使用&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CV_INTER_LINEAR&lt;/code&gt;  双线性插值（缺省使用）&lt;/h3&gt;
&lt;h4 id=&#34;滤波&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#滤波&#34;&gt;#&lt;/a&gt; 滤波&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806120841036.png&#34; alt=&#34;image-20240806120841036&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解决放大图像边界会出现马赛克、模糊的情况&lt;/p&gt;
&lt;h4 id=&#34;双线性内插值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#双线性内插值&#34;&gt;#&lt;/a&gt; 双线性内插值&lt;/h4&gt;
&lt;p&gt;使放大的图像边界更加平滑&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806121855326.png&#34; alt=&#34;image-20240806121855326&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806122849235.png&#34; alt=&#34;image-20240806122849235&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用：直接把方法参数处改为 &lt;code&gt;INTER_LINEAR&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;图像金字塔&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图像金字塔&#34;&gt;#&lt;/a&gt; 图像金字塔&lt;/h2&gt;
&lt;p&gt;在图像放大缩小、拼接、扭曲都可以用到这种算法&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//高斯金字塔，原图，目标图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;pyrDown&lt;/span&gt;(src, gsrc);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//拉普拉斯金字塔&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;pyrUp&lt;/span&gt;(src, lsrc);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806123833136.png&#34; alt=&#34;image-20240806123833136&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;高斯金字塔向下采样缩小&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高斯金字塔向下采样缩小&#34;&gt;#&lt;/a&gt; 高斯金字塔（向下采样缩小）&lt;/h3&gt;
&lt;p&gt;用来向下采样&lt;/p&gt;
&lt;p&gt;把整个分辨率降低&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806123851349.png&#34; alt=&#34;image-20240806123851349&#34; /&gt;&lt;/p&gt;
&lt;p&gt;比如图像是 8*8 的，卷积后将所有偶数行和列去除，就缩小成了 4*4 的图像&lt;/p&gt;
&lt;p&gt;G (i+1) 表示上一层&lt;/p&gt;
&lt;h4 id=&#34;高斯内核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高斯内核&#34;&gt;#&lt;/a&gt; 高斯内核&lt;/h4&gt;
&lt;p&gt;提供好的固定的矩阵&lt;/p&gt;
&lt;p&gt;opencv 提供的高斯金字塔只支持这种 5*5 的矩阵&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806205111854.png&#34; alt=&#34;image-20240806205111854&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;拉普拉斯金字塔&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拉普拉斯金字塔&#34;&gt;#&lt;/a&gt; 拉普拉斯金字塔&lt;/h3&gt;
&lt;p&gt;用来从金字塔低层图像重建上层未采样图像&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806205436330.png&#34; alt=&#34;image-20240806205436330&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;两幅图像混合blending&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#两幅图像混合blending&#34;&gt;#&lt;/a&gt; 两幅图像混合（blending）&lt;/h2&gt;
&lt;h3 id=&#34;公式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#公式&#34;&gt;#&lt;/a&gt; 公式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;dst = src1*a + src2*(1-a) + gamma &lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最终叠化成果的像素集 = 原图 1 * 透明度 + 原图 2 * 透明度&lt;/p&gt;
&lt;p&gt;&lt;code&gt;（1-透明度）&lt;/code&gt; 是为了融合度高，一个高一个低&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806223204829.png&#34; alt=&#34;image-20240806223204829&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;opencv-addweighted&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opencv-addweighted&#34;&gt;#&lt;/a&gt; OpenCV- &lt;code&gt;addWeighted()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;第五个参数（0.0）：对图像的增益，比如颜色更深，白色更亮&lt;/p&gt;
&lt;p&gt;第六个参数（dst)：最终生成的目标&lt;/p&gt;
&lt;h2 id=&#34;图像旋转和镜像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图像旋转和镜像&#34;&gt;#&lt;/a&gt; 图像旋转和镜像&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//旋转rotate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Mat rot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cv::&lt;span class=&#34;built_in&#34;&gt;rotate&lt;/span&gt;(src, rot, ROTATE_90_CLOCKWISE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//镜像flip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Mat fl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cv::&lt;span class=&#34;built_in&#34;&gt;flip&lt;/span&gt;(src, fl, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;旋转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#旋转&#34;&gt;#&lt;/a&gt; 旋转&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806224542424.png&#34; alt=&#34;image-20240806224542424&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;镜像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#镜像&#34;&gt;#&lt;/a&gt; 镜像&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240806224619312.png&#34; alt=&#34;image-20240806224619312&#34; /&gt;&lt;/p&gt;
&lt;p&gt;0 (x)—— 上下做镜像&lt;/p&gt;
&lt;p&gt;1 (y)—— 左右做镜像&lt;/p&gt;
&lt;p&gt;-1—— 两个都做&lt;/p&gt;
&lt;h2 id=&#34;通过roi图像合并&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通过roi图像合并&#34;&gt;#&lt;/a&gt; 通过 ROI 图像合并&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//roi图像合并&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//使图像高度一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; height = src.rows;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; width1 = src.cols;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; width2 = src&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;cols;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//将高图像等比缩放&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (src.rows &amp;gt; src&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;rows) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        height = src&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;rows;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        width1 = src.cols * ((&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt;)src&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;rows / (&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt;)src.rows);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;resize&lt;/span&gt;(src, src, &lt;span class=&#34;built_in&#34;&gt;Size&lt;/span&gt;(width1, height));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (src.rows &amp;lt; src&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;rows) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        width2 = src&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;cols * ((&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt;)src.rows / (&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt;)src&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;rows);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;resize&lt;/span&gt;(src2, src2, &lt;span class=&#34;built_in&#34;&gt;Size&lt;/span&gt;(width2, height));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//创建目标Mat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Mat des;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    des.&lt;span class=&#34;built_in&#34;&gt;create&lt;/span&gt;(height, width1 + width2, src.&lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Mat r1 = &lt;span class=&#34;built_in&#34;&gt;des&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;Rect&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, width1, height));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Mat r2 = &lt;span class=&#34;built_in&#34;&gt;des&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;Rect&lt;/span&gt;(width1, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, width2, height));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    src.&lt;span class=&#34;built_in&#34;&gt;copyTo&lt;/span&gt;(r1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    src&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;copyTo&lt;/span&gt;(r2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;ffmpeg工具抽取剪切音频合并视频&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ffmpeg工具抽取剪切音频合并视频&#34;&gt;#&lt;/a&gt; ffmpeg 工具抽取剪切音频合并视频&lt;/h2&gt;
&lt;h3 id=&#34;抽取音频&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#抽取音频&#34;&gt;#&lt;/a&gt; 抽取音频&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ffmpeg.exe -i 1.avi -vn 1.mp3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;-i 表示源 1.avi 输入文件 -vn 表示不转换视频 1.MP3 输出文件&lt;/p&gt;
&lt;h3 id=&#34;剪切音频&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#剪切音频&#34;&gt;#&lt;/a&gt; 剪切音频&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ffmpeg -ss 0:0:30 -t 0:0:20 -i input.mp3 -c copy output.mp3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;-ss 表示开始时间 -t 表示剪切时间&lt;/p&gt;
&lt;h3 id=&#34;音视频合并&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#音视频合并&#34;&gt;#&lt;/a&gt; 音视频合并&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ffmpeg.exe -i 1.mp3 -i 1.mp4 -c copy out.mp4&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;opencv-videocapture读取视频&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opencv-videocapture读取视频&#34;&gt;#&lt;/a&gt; OpenCV VideoCapture 读取视频&lt;/h2&gt;
&lt;h3 id=&#34;videocapture类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#videocapture类&#34;&gt;#&lt;/a&gt; VideoCapture 类&lt;/h3&gt;
&lt;p&gt;这是一个读取视频的类，视频源可以是文件、摄像头、RTSP 流都可以&lt;/p&gt;
&lt;h3 id=&#34;打开摄像头方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打开摄像头方式&#34;&gt;#&lt;/a&gt; 打开摄像头方式&lt;/h3&gt;
&lt;h4 id=&#34;bool-openint-index&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bool-openint-index&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bool open(int index)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;这个参数 index 索引对应你的所有摄像机列表&lt;/p&gt;
&lt;h5 id=&#34;openint-cameranumint-apipreference&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openint-cameranumint-apipreference&#34;&gt;#&lt;/a&gt;  &lt;code&gt;open(int cameraNum.int apiPreference)&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;可以手动选择 api 接口，默认是 0 ，自动监测&lt;/p&gt;
&lt;h4 id=&#34;videocapture-capindex&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#videocapture-capindex&#34;&gt;#&lt;/a&gt;  &lt;code&gt;VideoCapture cap(index)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;这是一个构造函数&lt;/p&gt;
&lt;h3 id=&#34;打开视频流文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打开视频流文件&#34;&gt;#&lt;/a&gt; 打开视频流文件&lt;/h3&gt;
&lt;h4 id=&#34;bool-openconst-string-filename&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bool-openconst-string-filename&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bool open(const String &amp;amp;filename)&lt;/code&gt;&lt;/h4&gt;
&lt;h4 id=&#34;videocapture-capconst-string-file&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#videocapture-capconst-string-file&#34;&gt;#&lt;/a&gt;  &lt;code&gt;VideoCapture cap(const String&amp;amp; file)&lt;/code&gt;&lt;/h4&gt;
&lt;h4 id=&#34;bool-openconst-string-filenameint-apipreference&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bool-openconst-string-filenameint-apipreference&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bool open(const String &amp;amp;filename,int apiPreference)&lt;/code&gt;&lt;/h4&gt;
&lt;h3 id=&#34;关闭和空间释放&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关闭和空间释放&#34;&gt;#&lt;/a&gt; 关闭和空间释放&lt;/h3&gt;
&lt;h4 id=&#34;~videocapture&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#~videocapture&#34;&gt;#&lt;/a&gt;  &lt;code&gt;~VideoCapture()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;析构函数，智能指针，在复制之后，引用计数会加一，直到没有引用，才会释放，通过智能指针，空间的释放不用做太多的管理&lt;/p&gt;
&lt;p&gt;如果不想要转码的时候调用全部 gpu，可以修改源码&lt;/p&gt;
&lt;h4 id=&#34;release&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#release&#34;&gt;#&lt;/a&gt;  &lt;code&gt;release()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;主动释放，如果 VideoCapture 被两次调用，一个引用 - 1，另一个空间也不会被释放掉，只是把你这次的引用 - 1&lt;/p&gt;
&lt;h2 id=&#34;读取一帧视频&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#读取一帧视频&#34;&gt;#&lt;/a&gt; 读取一帧视频&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;VideoCapture video;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;video.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1.mp4&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!video.&lt;span class=&#34;built_in&#34;&gt;isOpened&lt;/span&gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot;fail&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cout &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Mat frame;&lt;span class=&#34;comment&#34;&gt;//用于存储每一帧视频图像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (;;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//从视频中读取一帧并存储在 frame 中。如果读取失败，退出循环。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;/*if (!video.read(frame)) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		break;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	&amp;#125;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//读帧，解码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!video.&lt;span class=&#34;built_in&#34;&gt;grab&lt;/span&gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//转换颜色格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!video.&lt;span class=&#34;built_in&#34;&gt;retrieve&lt;/span&gt;(frame)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (frame.&lt;span class=&#34;built_in&#34;&gt;empty&lt;/span&gt;()) &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//显示当前帧。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;imshow&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, frame);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//等待5毫秒,与播放出来的速度有关&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;waitKey&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;readoutputarray-image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#readoutputarray-image&#34;&gt;#&lt;/a&gt;  &lt;code&gt;read(OutputArray image)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;它先是解压缩（解码），然后对图片做了色彩转换&lt;/p&gt;
&lt;p&gt;h264 用一帧画面存储整个，也是用 jpg 来压缩，后面 50 帧画面只存储与这一帧的&lt;strong&gt;变化&lt;/strong&gt;，这样的压缩率非常高，这样的话就存在一个问题，每一帧必须都要解码，比如说第十帧是针对第九帧的变化，那么取出一整个画面就是不对的，所以我们可以&lt;strong&gt;先把前面的解码&lt;/strong&gt;，先不做图像转换，不显示，以提高效率&lt;/p&gt;
&lt;h3 id=&#34;bool-grab&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bool-grab&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bool grab()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;读取并解码&lt;/p&gt;
&lt;h3 id=&#34;virtual-bool-retrieveoutputarray-imageint-flag-0&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#virtual-bool-retrieveoutputarray-imageint-flag-0&#34;&gt;#&lt;/a&gt;  &lt;code&gt;virtual bool retrieve(OutputArray image,int flag = 0 )&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;图像色彩转换&lt;/p&gt;
&lt;h3 id=&#34;vcmat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vcmat&#34;&gt;#&lt;/a&gt;  &lt;code&gt;vc&amp;gt;&amp;gt;mat&lt;/code&gt;&lt;/h3&gt;
&lt;h2 id=&#34;获取视频-相机属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取视频-相机属性&#34;&gt;#&lt;/a&gt; 获取视频、相机属性&lt;/h2&gt;
&lt;p&gt;其他属性的获取可以看 OpenCV 的 api 文档 ——OpenCV Flags for video I/O&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fps = video.&lt;span class=&#34;built_in&#34;&gt;get&lt;/span&gt;(CAP_PROP_FPS);&lt;span class=&#34;comment&#34;&gt;//帧率，使用get()，里面放以下的参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fps != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) s = &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt; / fps;&lt;span class=&#34;comment&#34;&gt;//帧数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;cap_prop_fps-帧率&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cap_prop_fps-帧率&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CAP_PROP_FPS&lt;/code&gt;  帧率&lt;/h3&gt;
&lt;p&gt;一秒钟的帧数&lt;/p&gt;
&lt;h3 id=&#34;cap_prop_frame_count总帧数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cap_prop_frame_count总帧数&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CAP_PROP_FRAME_COUNT&lt;/code&gt;  总帧数&lt;/h3&gt;
&lt;p&gt;计算视频时长：总帧数除以帧率（s）&lt;/p&gt;
&lt;h3 id=&#34;cap_prop_pos_frames播放帧的位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cap_prop_pos_frames播放帧的位置&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CAP_PROP_POS_FRAMES&lt;/code&gt;  播放帧的位置&lt;/h3&gt;
&lt;p&gt;跳帧，下一帧&lt;/p&gt;
&lt;h3 id=&#34;cap_prop_frame_width-height&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cap_prop_frame_width-height&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CAP_PROP_FRAME_WIDTH HEIGHT&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;可以获取到视频帧的宽度高度，虽然一解码的时候可以获取到这个信息，但是有些处理，还没有读帧的时候需要用到这个高度，就需要用到，比如窗口自适应&lt;/p&gt;
&lt;h2 id=&#34;设置视频播放的进度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置视频播放的进度&#34;&gt;#&lt;/a&gt; 设置视频播放的进度&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; cur = video.&lt;span class=&#34;built_in&#34;&gt;get&lt;/span&gt;(CAP_PROP_POS_FRAMES);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//视频经过3s跳到开头&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cur &amp;gt; &lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	video.&lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;(CAP_PROP_POS_FRAMES, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;cap_prop_pos_msec毫秒位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cap_prop_pos_msec毫秒位置&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CAP_PROP_POS_MSEC&lt;/code&gt;  毫秒位置&lt;/h3&gt;
&lt;p&gt;毫秒 -&amp;gt; 帧 -&amp;gt;ffmpeg 时间，要转两次，浮点数值来回转换，会出现数据的丢失，所以建议使用帧位置&lt;/p&gt;
&lt;h3 id=&#34;cap_prop_pos_frames帧位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cap_prop_pos_frames帧位置&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CAP_PROP_POS_FRAMES&lt;/code&gt;  帧位置&lt;/h3&gt;
&lt;h2 id=&#34;videowriter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#videowriter&#34;&gt;#&lt;/a&gt; VideoWriter&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Aura-HY/blogImage@main/img/image-20240807123150031.png&#34; alt=&#34;image-20240807123150031&#34; /&gt;&lt;/p&gt;
&lt;p&gt;要主动释放 release ()&lt;/p&gt;
&lt;h3 id=&#34;void-writeconst-mat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#void-writeconst-mat&#34;&gt;#&lt;/a&gt;  &lt;code&gt;void write(const Mat&amp;amp;)&lt;/code&gt;&lt;/h3&gt;
&lt;h3 id=&#34;cvvideowriter_ffmpegwriteframe&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cvvideowriter_ffmpegwriteframe&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CvVideoWriter_FFMPEG::writeFrame&lt;/code&gt;&lt;/h3&gt;
&lt;h2 id=&#34;录制摄像头视频并存储代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#录制摄像头视频并存储代码&#34;&gt;#&lt;/a&gt; 录制摄像头视频并存储代码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* argv[])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//参数 0 指定使用第一个连接的摄像头&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;VideoCapture &lt;span class=&#34;title&#34;&gt;cam&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//检查摄像头是否成功打开&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!cam.&lt;span class=&#34;built_in&#34;&gt;isOpened&lt;/span&gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cout &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot;fail&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//用于存储图像帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Mat img;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//用于写入视频文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	VideoWriter vw;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//获取摄像头的帧率（fps）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fps = cam.&lt;span class=&#34;built_in&#34;&gt;get&lt;/span&gt;(CAP_PROP_FPS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//如果获取失败或帧率小于等于0，则默认设置帧率为25。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fps &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) fps = &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//打开视频写入器 vw 并准备写入文件 &amp;quot;out.avi&amp;quot;。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	vw.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;out.avi&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		VideoWriter::&lt;span class=&#34;built_in&#34;&gt;fourcc&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;X&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;6&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;4&amp;#x27;&lt;/span&gt;),&lt;span class=&#34;comment&#34;&gt;//指定视频编码格式为X264。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		fps,&lt;span class=&#34;comment&#34;&gt;//每秒帧数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;Size&lt;/span&gt;(cam.&lt;span class=&#34;built_in&#34;&gt;get&lt;/span&gt;(CAP_PROP_FRAME_WIDTH),&lt;span class=&#34;comment&#34;&gt;//指定视频的宽度和高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			cam.&lt;span class=&#34;built_in&#34;&gt;get&lt;/span&gt;(CAP_PROP_FRAME_HEIGHT))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//两个函数返回摄像头当前设置的帧宽度和高度，单位是像素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//检查视频写入器是否成功打开&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!vw.&lt;span class=&#34;built_in&#34;&gt;isOpened&lt;/span&gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cout &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot;falied&amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;getchar&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot;vw success&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;namedWindow&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;cam&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (;;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//读取摄像头的一帧图像到 img&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cam.&lt;span class=&#34;built_in&#34;&gt;read&lt;/span&gt;(img);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (img.&lt;span class=&#34;built_in&#34;&gt;empty&lt;/span&gt;()) &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;imshow&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;cam&amp;quot;&lt;/span&gt;, img);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//将图像 img 写入视频文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		vw.&lt;span class=&#34;built_in&#34;&gt;write&lt;/span&gt;(img);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//q退出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;waitKey&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) == &lt;span class=&#34;string&#34;&gt;&amp;#x27;q&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;视频编辑器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#视频编辑器&#34;&gt;#&lt;/a&gt; 视频编辑器&lt;/h2&gt;
&lt;h3 id=&#34;bug修复&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bug修复&#34;&gt;#&lt;/a&gt; bug 修复&lt;/h3&gt;
&lt;p&gt;1、信号没有发送&lt;/p&gt;
&lt;p&gt;线程没有开启，要在线程中加入 &lt;code&gt;start()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2、在头文件中的函数要在 cpp 中有&lt;/p&gt;
&lt;h3 id=&#34;流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流程&#34;&gt;#&lt;/a&gt; 流程&lt;/h3&gt;
&lt;h4 id=&#34;前期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前期&#34;&gt;#&lt;/a&gt; 前期&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;设置页面背景色&lt;/li&gt;
&lt;li&gt;取消顶部菜单栏 &lt;code&gt;setWindowFlags(Qt::FramelessWindowHint);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加关闭按钮，设置信号与槽&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;视频显示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#视频显示&#34;&gt;#&lt;/a&gt; 视频显示&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ui 添加 glWidget，并提升为新建立的类&lt;/li&gt;
&lt;li&gt;在主.cpp 中添加上传文件按钮，并设置 open 函数，连接信号槽&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;VideoUI::open&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//返回的是一个路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   QString name = QFileDialog::&lt;span class=&#34;built_in&#34;&gt;getOpenFileName&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;,QString::&lt;span class=&#34;built_in&#34;&gt;fromLocal8Bit&lt;/span&gt;( &lt;span class=&#34;string&#34;&gt;&amp;quot;请选择要编辑的视频/图片&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (name.&lt;span class=&#34;built_in&#34;&gt;isEmpty&lt;/span&gt;()) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;//主要是防止中文文件报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   string file = name.&lt;span class=&#34;built_in&#34;&gt;toLocal8Bit&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;data&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;//QMessageBox::information(this, QString::fromLocal8Bit(&amp;quot;获取视频名消息&amp;quot;), name);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;//在线程中创建对象，打开文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!videoThread::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;()-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(file)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       QMessageBox::&lt;span class=&#34;built_in&#34;&gt;information&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,name+&lt;span class=&#34;string&#34;&gt;&amp;quot;fail&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建线程，开启线程，在线程中打开文件，在 VideoUI 的 open 函数中调用 videoThread 类中的 get 创建对象，执行 open 函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//用于打开视频文件或摄像头，并从中读取视频帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; VideoCapture cap1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;videoThread::open&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; std::string file)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mutex.&lt;span class=&#34;built_in&#34;&gt;lock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; re = cap&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mutex.&lt;span class=&#34;built_in&#34;&gt;unlock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout &amp;lt;&amp;lt; re &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; re;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线程启动后会自动调用 run (), 读取每帧视频存到 mat 对象中&lt;/li&gt;
&lt;li&gt;传递信号至 ui 中的显示容器中，用 setImage1 () 处理图像，paintEvent () 刷新图像&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;视频进度条&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#视频进度条&#34;&gt;#&lt;/a&gt; 视频进度条&lt;/h4&gt;
&lt;h5 id=&#34;设置进度条随视频变化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置进度条随视频变化&#34;&gt;#&lt;/a&gt; 设置进度条随视频变化：&lt;/h5&gt;
&lt;p&gt;在 VideoUI 中设置定时器，定时器获取到当前视频的播放状态然后再改变滑动条的位置&lt;/p&gt;
&lt;p&gt;videoThread 返回播放进度或者返回成员也能算出进度&lt;/p&gt;
&lt;h5 id=&#34;拖动进度条变化视频&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拖动进度条变化视频&#34;&gt;#&lt;/a&gt; 拖动进度条变化视频：&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;拖动进度条发送信号，带有参数，传进槽函数中处理&lt;/li&gt;
&lt;li&gt;在槽函数中将参数传入线程中调用 seek 函数，seek 函数获取当前视频的总帧数，计算出当前的位置&lt;/li&gt;
&lt;li&gt;传到另一个 seek 中设置画面到算出的这个位置&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;视频亮度和对比度调整&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#视频亮度和对比度调整&#34;&gt;#&lt;/a&gt; 视频亮度和对比度调整&lt;/h4&gt;
&lt;p&gt;videoUI-&amp;gt;Filter-&amp;gt;imagePro&lt;/p&gt;
&lt;h5 id=&#34;添加videofilter类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#添加videofilter类&#34;&gt;#&lt;/a&gt; 添加 videoFilter 类&lt;/h5&gt;
&lt;p&gt;相当于一个任务列表，执行多个任务，把任务依次给 imagePro 来执行，所以要先搞 imagePro&lt;/p&gt;
&lt;h5 id=&#34;接收界面设置的参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#接收界面设置的参数&#34;&gt;#&lt;/a&gt; 接收界面设置的参数&lt;/h5&gt;
&lt;h5 id=&#34;输出处理后的视频&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出处理后的视频&#34;&gt;#&lt;/a&gt; 输出处理后的视频&lt;/h5&gt;
&lt;h4 id=&#34;后续每添加一个功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后续每添加一个功能&#34;&gt;#&lt;/a&gt; 后续每添加一个功能&lt;/h4&gt;
&lt;p&gt;先做函数，再加过滤器（任务），调用对应处理的函数，然后就是 ui 部分&lt;/p&gt;
&lt;h3 id=&#34;videothreadh&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#videothreadh&#34;&gt;#&lt;/a&gt; videoThread.h&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;pragma&lt;/span&gt; once&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;QThread&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;videoThread&lt;/span&gt;:&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; QThread&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//这是一个静态成员函数声明。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//static 意味着这个函数属于整个类，而不是属于某个对象（实例）。			&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//videoThread* 是返回类型，表示这个函数返回的是一个 videoThread 类型的指针。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//可以在没有创建对象的情况下调用它。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; videoThread* &lt;span class=&#34;title&#34;&gt;Get&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; videoThread vt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;amp;vt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//打开一号视频源文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//const 表示这个输入字符串在函数内不能被修改。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; std::string file)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//这是一个清理对象时自动调用的函数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	~&lt;span class=&#34;built_in&#34;&gt;videoThread&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//线程入口函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//将以下内容隐藏起来，只允许类本身或其子类访问。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//构造函数在创建类的对象时自动调用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;videoThread&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;videothreadhpp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#videothreadhpp&#34;&gt;#&lt;/a&gt; videoThread.hpp&lt;/h3&gt;
&lt;h4 id=&#34;mutex-互斥锁&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mutex-互斥锁&#34;&gt;#&lt;/a&gt; mutex 互斥锁&lt;/h4&gt;
&lt;p&gt;用来防止多个线程同时访问 &lt;code&gt;cap1&lt;/code&gt;  对象，避免数据竞争，在执行 “任务” 的时候上锁，防止别的线程插队，等执行完后再解锁，这个上锁解锁的原则就是晚锁早解，提高效率&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;videoThread.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;opencv2/imgcodecs.hpp&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;opencv2/highgui.hpp&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;opencv2/imgproc.hpp&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;qdebug.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; cv;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//用于打开视频文件或摄像头，并从中读取视频帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; VideoCapture cap1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//检查线程是否退出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; isexit = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;videoThread::&lt;span class=&#34;built_in&#34;&gt;videoThread&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//要开启线程，否则其他都不会执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;start&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;videoThread::open&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; std::string file)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mutex.&lt;span class=&#34;built_in&#34;&gt;lock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//打开视频文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; re = cap&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mutex.&lt;span class=&#34;built_in&#34;&gt;unlock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout &amp;lt;&amp;lt; re &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; re;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;videoThread::run&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Mat m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (;;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mutex.&lt;span class=&#34;built_in&#34;&gt;lock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//如果isexit被设置为true（表示线程需要退出），则退出循环，并终止线程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isexit) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			mutex.&lt;span class=&#34;built_in&#34;&gt;unlock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//判断视频是否打开&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!cap&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;isOpened&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			mutex.&lt;span class=&#34;built_in&#34;&gt;unlock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;msleep&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//读取视频&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!cap&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;read&lt;/span&gt;(m) || m.&lt;span class=&#34;built_in&#34;&gt;empty&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			mutex.&lt;span class=&#34;built_in&#34;&gt;unlock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;msleep&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//显示图像,发送信号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;function&#34;&gt;emit &lt;span class=&#34;title&#34;&gt;viewImage1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(m)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;msleep&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mutex.&lt;span class=&#34;built_in&#34;&gt;unlock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;videoThread::~&lt;span class=&#34;built_in&#34;&gt;videoThread&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mutex.&lt;span class=&#34;built_in&#34;&gt;lock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	isexit = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mutex.&lt;span class=&#34;built_in&#34;&gt;unlock&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;videowidgethpp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#videowidgethpp&#34;&gt;#&lt;/a&gt; videoWidget.hpp&lt;/h3&gt;
&lt;h4 id=&#34;void-videowidgetpainteventqpaintevent-e&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#void-videowidgetpainteventqpaintevent-e&#34;&gt;#&lt;/a&gt;  &lt;code&gt;void videoWidget::paintEvent(QPaintEvent* e)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;这是一个覆盖（override）了 &lt;code&gt;QOpenGLWidget&lt;/code&gt;  中的 &lt;code&gt;paintEvent&lt;/code&gt;  函数。 &lt;code&gt;paintEvent&lt;/code&gt;  在 Qt 中是一个虚函数，当窗口部件需要重绘时（例如窗口大小改变，或者通过 &lt;code&gt;update()&lt;/code&gt;  函数请求重绘时），Qt 会自动调用这个函数。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;videoWidget.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;QPainter&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//初始化操作在QOpenGLWidget(p)进行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;videoWidget::&lt;span class=&#34;built_in&#34;&gt;videoWidget&lt;/span&gt;(QWidget* p) :&lt;span class=&#34;built_in&#34;&gt;QOpenGLWidget&lt;/span&gt;(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;videoWidget::paintEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(QPaintEvent* e)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//用于执行绘图操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	QPainter p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//begin()函数开始在当前小部件（this）上进行绘图操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.&lt;span class=&#34;built_in&#34;&gt;begin&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//在小部件的原点（QPoint(0, 0)）处绘制图像img&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//img包含了之前设置的图像数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.&lt;span class=&#34;built_in&#34;&gt;drawImage&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;QPoint&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;), img);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//结束绘图操作，释放相关资源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.&lt;span class=&#34;built_in&#34;&gt;end&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;videoWidget::~&lt;span class=&#34;built_in&#34;&gt;videoWidget&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;videoWidget::setImage&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(cv::Mat mat)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (img.&lt;span class=&#34;built_in&#34;&gt;isNull&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//图像处理都要用uchar,否则会造成数据丢失&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//宽高像素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//创建了一个大小为width() * height() * 3的缓冲区buf，用来存储图像数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//width()和height()是视频小部件的宽度和高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//乘以3是因为每个像素在Format_RGB888格式下占用3个字节（分别表示红、绿、蓝三个颜色通道）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		uchar* buf = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; uchar[&lt;span class=&#34;built_in&#34;&gt;width&lt;/span&gt;() * &lt;span class=&#34;built_in&#34;&gt;height&lt;/span&gt;() * &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//创建一个新的QImage对象，并将buf作为其内部数据存储&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		img = &lt;span class=&#34;built_in&#34;&gt;QImage&lt;/span&gt;(buf, &lt;span class=&#34;built_in&#34;&gt;width&lt;/span&gt;(), &lt;span class=&#34;built_in&#34;&gt;height&lt;/span&gt;(), QImage::Format_RGB888);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//将OpenCV图像mat的数据复制到QImage的缓冲区中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//img.bits()返回QImage数据的指针，mat.data是cv::Mat图像数据的指针。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//mat.cols * mat.rows * mat.elemSize()计算了需要复制的数据大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(img.&lt;span class=&#34;built_in&#34;&gt;bits&lt;/span&gt;(), mat.data, mat.cols * mat.rows * mat.&lt;span class=&#34;built_in&#34;&gt;elemSize&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//刷新会调用到paintevent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//设置了新的图像数据后，小部件会立即刷新显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;update&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
        <updated>2024-08-06T16:00:00.000Z</updated>
    </entry>
</feed>
